version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: nakhrali_postgres
    environment:
      POSTGRES_DB: nakhrali_fashion
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nakhrali_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nakhrali_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nakhrali_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nakhrali_backend
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/nakhrali_fashion
      - REDIS_URL=redis://redis:6379
      - FLASK_ENV=development
      - SECRET_KEY=dev-secret-key
      - JWT_SECRET_KEY=dev-jwt-secret
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - nakhrali_network
    command: python run.py

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nakhrali_frontend
    environment:
      - API_BASE_URL=http://localhost:8000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - nakhrali_network
    command: npm run dev

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: nakhrali_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - nakhrali_network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  nakhrali_network:
    driver: bridge 